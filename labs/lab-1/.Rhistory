utah_inc_pop <- get_acs(
geography = "county",
state = my_state,
# Median household income and total population.
variables = c("B19013_001", "B01003_001"),
year = 2022,
survey = "acs5"
)
glimpse(utah_inc_pop)
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
utah_inc_pop <- mutate(utah_inc_pop, NAME = str_remove(NAME, " County, Utah"))
# Display the first few rows
glimpse(utah_inc_pop)
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percentage = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
moe > 10 ~ "Low Confidence",
moe <= 10 ~ "Moderate Confidence",
moe < 5 ~ "High Confidence",
))
utah_inc_pop
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
#count_summary <- utah_inc_pop %>%
#  add_count(reliability_cat, name = "reliability_count")
#utah_inc_pop %>% group_by(reliability_cat) %>% summarize(n = add_count(reliability_cat))
#count_summary <- utah_inc_pop %>%
#  group_by(reliability_cat) %>%
#  summarize(frequency = add_count(reliability_cat)) %>%
#  mutate(frequency = frequency)
#count_summary <- utah_inc_pop %>%
#  group_by(reliability_cat) %>%
#  summarize(frequency = n()) %>%
#  mutate(frequency = frequency)
#count_summary
# Create table of top 5 counties by MOE percentage
# Format as table with kable() - include appropriate column names and caption
# Use filter() to select 2-3 counties from your county_reliability data
# Store the selected counties in a variable called selected_counties
# Display the selected counties with their key characteristics
# Show: county name, median income, MOE percentage, reliability category
# Define your race/ethnicity variables with descriptive names
# Use get_acs() to retrieve tract-level data
# Hint: You may need to specify county codes in the county parameter
# Calculate percentage of each group using mutate()
# Create percentages for white, Black, and Hispanic populations
# Add readable tract and county name columns using str_extract() or similar
# Find the tract with the highest percentage of Hispanic/Latino residents
# Hint: use arrange() and slice() to get the top tract
# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
# Create a nicely formatted table of your results using kable()
# Calculate MOE percentages for white, Black, and Hispanic variables
# Hint: use the same formula as before (margin/estimate * 100)
# Create a flag for tracts with high MOE on any demographic variable
# Use logical operators (| for OR) in an ifelse() statement
# Create summary statistics showing how many tracts have data quality issues
# Group tracts by whether they have high MOE issues
# Calculate average characteristics for each group:
# - population size, demographic percentages
# Use group_by() and summarize() to create this comparison
# Create a professional table showing the patterns
# Create a summary table using your county reliability data
# Include: county name, median income, MOE percentage, reliability category
# Add a new column with algorithm recommendations using case_when():
# - High Confidence: "Safe for algorithmic decisions"
# - Moderate Confidence: "Use with caution - monitor outcomes"
# - Low Confidence: "Requires manual review or additional data"
# Format as a professional table with kable()
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percentage = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
moe > 10 ~ "Low Confidence",
moe <= 10 ~ "Moderate Confidence",
moe < 5 ~ "High Confidence",
))
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidycensus)
library(tidyverse)
library(knitr)
# Set your Census API key
census_api_key("3aaee31789e10b674a531e9f236c35d5394b19ed")
# Choose your state for analysis - assign it to a variable called my_state
my_state = "Utah"
# Write your get_acs() code here
utah_inc_pop <- get_acs(
geography = "county",
state = my_state,
# Median household income and total population.
variables = c("B19013_001", "B01003_001"),
year = 2022,
survey = "acs5"
)
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
utah_inc_pop <- mutate(utah_inc_pop, NAME = str_remove(NAME, " County, Utah"))
# Display the first few rows
glimpse(utah_inc_pop)
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percentage = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
moe > 10 ~ "Low Confidence",
moe <= 10 ~ "Moderate Confidence",
moe < 5 ~ "High Confidence",
))
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
#count_summary <- utah_inc_pop %>%
#  add_count(reliability_cat, name = "reliability_count")
#utah_inc_pop %>% group_by(reliability_cat) %>% summarize(n = add_count(reliability_cat))
#count_summary <- utah_inc_pop %>%
#  group_by(reliability_cat) %>%
#  summarize(frequency = add_count(reliability_cat)) %>%
#  mutate(frequency = frequency)
#count_summary <- utah_inc_pop %>%
#  group_by(reliability_cat) %>%
#  summarize(frequency = n()) %>%
#  mutate(frequency = frequency)
#count_summary
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percentage = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
moe < 5 ~ "High Confidence",
moe <= 10 ~ "Moderate Confidence",
moe > 10 ~ "Low Confidence"
))
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percentage = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
moe < 5 ~ "High Confidence",
moe <= 10 ~ "Moderate Confidence",
moe > 10 ~ "Low Confidence"
))
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidycensus)
library(tidyverse)
library(knitr)
# Set your Census API key
census_api_key("3aaee31789e10b674a531e9f236c35d5394b19ed")
# Choose your state for analysis - assign it to a variable called my_state
my_state = "Utah"
# Write your get_acs() code here
utah_inc_pop <- get_acs(
geography = "county",
state = my_state,
# Median household income and total population.
variables = c("B19013_001", "B01003_001"),
year = 2022,
survey = "acs5"
)
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
utah_inc_pop <- mutate(utah_inc_pop, NAME = str_remove(NAME, " County, Utah"))
# Display the first few rows
glimpse(utah_inc_pop)
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percentage = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
moe < 5 ~ "High Confidence",
moe <= 10 ~ "Moderate Confidence",
moe > 10 ~ "Low Confidence"
))
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
#count_summary <- utah_inc_pop %>%
#  add_count(reliability_cat, name = "reliability_count")
#utah_inc_pop %>% group_by(reliability_cat) %>% summarize(n = add_count(reliability_cat))
#count_summary <- utah_inc_pop %>%
#  group_by(reliability_cat) %>%
#  summarize(frequency = add_count(reliability_cat)) %>%
#  mutate(frequency = frequency)
#count_summary <- utah_inc_pop %>%
#  group_by(reliability_cat) %>%
#  summarize(frequency = n()) %>%
#  mutate(frequency = frequency)
#count_summary
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidycensus)
library(tidyverse)
library(tidyverse)
library(knitr)
library(knitr)
# Set your Census API key
census_api_key("3aaee31789e10b674a531e9f236c35d5394b19ed")
# Choose your state for analysis - assign it to a variable called my_state
my_state = "Utah"
# Write your get_acs() code here
utah_inc_pop <- get_acs(
geography = "county",
state = my_state,
# Median household income and total population.
variables = c("B19013_001", "B01003_001"),
year = 2022,
survey = "acs5"
)
# Write your get_acs() code here
utah_inc_pop <- get_acs(
geography = "county",
state = my_state,
# Median household income and total population.
variables = c("B19013_001", "B01003_001"),
year = 2022,
survey = "acs5"
)
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
utah_inc_pop <- mutate(utah_inc_pop, NAME = str_remove(NAME, " County, Utah"))
# Display the first few rows
glimpse(utah_inc_pop)
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percentage = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
moe < 5 ~ "High Confidence",
moe <= 10 ~ "Moderate Confidence",
moe > 10 ~ "Low Confidence"
))
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percentage = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
MOE_percentage < 5 ~ "High Confidence",
MOE_percentage <= 10 ~ "Moderate Confidence",
MOE_percentage > 10 ~ "Low Confidence"
))
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percent = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
MOE_percent < 5 ~ "High Confidence",
MOE_percent <= 10 ~ "Moderate Confidence",
MOE_percent > 10 ~ "Low Confidence"
))
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency)
count_summary
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percent = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
MOE_percent < 5 ~ "High Confidence",
MOE_percent <= 10 ~ "Moderate Confidence",
MOE_percent > 10 ~ "Low Confidence"
)) %>%
mutate(utah_inc_pop, low_flag = reliability_cat == "Low Confidence")
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidycensus)
library(tidyverse)
library(knitr)
# Set your Census API key
census_api_key("3aaee31789e10b674a531e9f236c35d5394b19ed")
# Choose your state for analysis - assign it to a variable called my_state
my_state = "Utah"
# Write your get_acs() code here
utah_inc_pop <- get_acs(
geography = "county",
state = my_state,
# Median household income and total population.
variables = c("B19013_001", "B01003_001"),
year = 2022,
survey = "acs5"
)
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
utah_inc_pop <- mutate(utah_inc_pop, NAME = str_remove(NAME, " County, Utah"))
# Display the first few rows
glimpse(utah_inc_pop)
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percent = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
MOE_percent < 5 ~ "High Confidence",
MOE_percent <= 10 ~ "Moderate Confidence",
MOE_percent > 10 ~ "Low Confidence"
)) %>%
mutate(utah_inc_pop, low_flag = reliability_cat == "Low Confidence")
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
#count_summary <- utah_inc_pop %>%
#  add_count(reliability_cat, name = "reliability_count")
#utah_inc_pop %>% group_by(reliability_cat) %>% summarize(n = add_count(reliability_cat))
#count_summary <- utah_inc_pop %>%
#  group_by(reliability_cat) %>%
#  summarize(frequency = add_count(reliability_cat)) %>%
#  mutate(frequency = frequency)
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency)
count_summary
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(count = n()) %>%
mutate(count = count)
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency)
count_summary
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
mutate(percent_counties = frequency / count(frequency))
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
mutate(percent_counties = frequency / n(frequency))
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
mutate(percent_counties = frequency / c(frequency))
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
mutate(percent_counties = frequency / add_count(frequency))
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
mutate(percent_counties = frequency / sum(frequency))
count_summary
# Create table of top 5 counties by MOE percentage
utah_inc_pop %>%
arrange(desc(MOE_percent)) %>%
# Format as table with kable() - include appropriate column names and caption
```
# Create table of top 5 counties by MOE percentage
utah_inc_pop %>%
arrange(desc(MOE_percent))
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidycensus)
library(tidyverse)
library(knitr)
# Set your Census API key
census_api_key("3aaee31789e10b674a531e9f236c35d5394b19ed")
# Choose your state for analysis - assign it to a variable called my_state
my_state = "Utah"
# Write your get_acs() code here
utah_inc_pop <- get_acs(
geography = "county",
state = my_state,
# Median household income and total population.
variables = c(median_inc = "B19013_001", total_pop = "B01003_001"),
year = 2022,
survey = "acs5"
)
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
utah_inc_pop <- mutate(utah_inc_pop, NAME = str_remove(NAME, " County, Utah"))
# Display the first few rows
glimpse(utah_inc_pop)
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percent = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
MOE_percent < 5 ~ "High Confidence",
MOE_percent <= 10 ~ "Moderate Confidence",
MOE_percent > 10 ~ "Low Confidence"
)) %>%
mutate(utah_inc_pop, low_flag = reliability_cat == "Low Confidence")
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
mutate(percent_counties = frequency / sum(frequency))
count_summary
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
remove(utah_inc_pop(NA))
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
na.omit(count_summary)
count_summary
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
na.omit(count_summary) %>%
mutate(percent_counties = frequency / sum(frequency))
count_summary
county_count <- utah_inc_pop %>%
group_by(NAME) %>%
summarize(freq = n()) %>%
mutate(freq = freq) %>%
county_count
county_count <- utah_inc_pop %>%
group_by(NAME) %>%
summarize(freq = n()) %>%
mutate(freq = freq)
county_count
glimpse(county_count)
View(count_summary)
View(county_count)
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
na.omit(count_summary) %>%
mutate(percent_counties = frequency / sum(frequency))
View(count_summary)
View(utah_inc_pop)
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
na.omit(count_summary) %>%
mutate(percent_counties = frequency / 29)
count_summary
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidycensus)
library(tidyverse)
library(knitr)
# Set your Census API key
census_api_key("3aaee31789e10b674a531e9f236c35d5394b19ed")
# Choose your state for analysis - assign it to a variable called my_state
my_state = "Utah"
# Write your get_acs() code here
utah_inc_pop <- get_acs(
geography = "county",
state = my_state,
# Median household income and total population.
variables = c(median_inc = "B19013_001", total_pop = "B01003_001"),
year = 2022,
survey = "acs5"
)
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
utah_inc_pop <- mutate(utah_inc_pop, NAME = str_remove(NAME, " County, Utah"))
# Display the first few rows
glimpse(utah_inc_pop)
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percent = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
MOE_percent < 5 ~ "High Confidence",
MOE_percent <= 10 ~ "Moderate Confidence",
MOE_percent > 10 ~ "Low Confidence"
)) %>%
mutate(utah_inc_pop, low_flag = reliability_cat == "Low Confidence")
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
na.omit(count_summary) %>%
mutate(percent_counties = frequency / 29)
count_summary
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidycensus)
library(tidyverse)
library(knitr)
# Set your Census API key
census_api_key("3aaee31789e10b674a531e9f236c35d5394b19ed")
# Choose your state for analysis - assign it to a variable called my_state
my_state = "Utah"
# Write your get_acs() code here
utah_inc_pop <- get_acs(
geography = "county",
state = my_state,
# Median household income and total population.
variables = c(median_inc = "B19013_001", total_pop = "B01003_001"),
year = 2022,
survey = "acs5"
)
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
utah_inc_pop <- mutate(utah_inc_pop, NAME = str_remove(NAME, " County, Utah"))
# Display the first few rows
glimpse(utah_inc_pop)
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_pop <- mutate(utah_inc_pop, MOE_percent = (moe / estimate) * 100) %>%
mutate(utah_inc_pop, reliability_cat =
case_when(
MOE_percent < 5 ~ "High Confidence",
MOE_percent <= 10 ~ "Moderate Confidence",
MOE_percent > 10 ~ "Low Confidence"
)) %>%
mutate(utah_inc_pop, low_flag = reliability_cat == "Low Confidence")
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
count_summary <- utah_inc_pop %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
na.omit(count_summary) %>%
mutate(percent_counties = frequency / 29)
count_summary
View(utah_inc_pop)
View(count_summary)
# Create table of top 5 counties by MOE percentage
utah_inc_pop %>%
arrange(desc(MOE_percent))
