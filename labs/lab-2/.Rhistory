map(summary) %>%
# Convert output list to tibble, tidying and stacking rows.
map_df(tidy) %>%
# Use original column names as variable values and place "variable" as the first column.
mutate(variable = names(data_used_df), .before = 1)
# Kable of summary statistics.
kable(
as.data.frame(summary_stats),
align = "c",
digit = 2,
format.args = list(big.mark = ","),
col.names = c("VARIABLE", "MIN", "Q1", "MEDIAN", "MEAN", "Q3", "MAX"),
caption = "<b>DRUG-RELATED DATA IN PHILADELPHIA, PA: Summary Statistics</b>"
) %>%
# Shade every other row for ease of reading.
kable_styling(bootstrap_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "mistyrose", background = "red3")
# Summary statistics of data used.
data_used <- drug_tracts %>%
transmute(
"GEOID" = GEOID,
"Population Estimate" = total_popE,
"Population MOE" = total_popM,
"Drug Incidence" = drug_offense,
"Percent Drug Incidence" = pct_drug_offense,
"Nearest Meal (mi)" = nearest_meal_mi,
"Nearest Facility (mi)" = nearest_facility_mi,
"Nearest Sharps (mi)" = nearest_sharps_mi
)
# Align CRS.
data_used <- st_transform(data_used, 4326)
free_meal_sites <- st_transform(free_meal_sites, 4326)
sharps_boxes <- st_transform(sharps_boxes, 4326)
treatment_facilities <- st_transform(treatment_facilities, 4326)
# Only get geometry of point data.
selected_meals <- free_meal_sites %>%
transmute(geometry)
selected_sharps <- sharps_boxes %>%
select(geometry)
selected_facilities <- treatment_facilities %>%
select(geometry)
# Task is repetitive, so create a function to help with counting all the meal, facility, and sharps bin point data for each tract.
count_points <- function(point_data, tract_data, id = "GEOID", name = "Count"){
result <- point_data %>%
# Join using within predicate.
st_join(tract_data, join = st_within) %>%
# Drop point geometry to avoid duplication when joining back with tracts later.
st_drop_geometry() %>%
# Group by census tract GEOID.
group_by(.data[[id]]) %>%
# Count instances of points in each GEOID.
summarize(Count = n())
# Change column name to user input name.
names(result)[names(result) == "Count"] <- name
# Return the result.
result
}
# Use function on all point datasets.
number_meals <- count_points(free_meal_sites, data_used, "GEOID", "Number of Meals")
number_sharps <- count_points(sharps_boxes, data_used, "GEOID", "Number of Sharps")
number_facilities <- count_points(treatment_facilities, data_used, "GEOID", "Number of Facilities")
# Add counts back into tract data using left join.
data_used <- data_used %>%
left_join(number_meals, by = "GEOID") %>%
left_join(number_sharps, by = "GEOID") %>%
left_join(number_facilities, by = "GEOID") %>%
mutate(
# Fill empty cells with 0.
`Number of Meals` = replace_na(`Number of Meals`, 0),
`Number of Sharps` = replace_na(`Number of Sharps`, 0),
`Number of Facilities` = replace_na(`Number of Facilities`, 0)
)
# Create dataframe from geodataframe for all data used.
data_used_df <- data_used %>%
st_drop_geometry() %>%
mutate(
GEOID = NULL
)
#| warning: false
# No scientific notation.
options(scipen = 999)
# Tidy summary statistics for kable.
summary_stats <- data_used_df %>%
# Use map function to use summary function on each column,
# generating descriptive statistics for the values and storing in a dataframe.
map(summary) %>%
# Convert output list to tibble, tidying and stacking rows.
map_df(tidy) %>%
# Use original column names as variable values and place "variable" as the first column.
mutate(variable = names(data_used_df), .before = 1)
# Kable of summary statistics.
kable(
as.data.frame(summary_stats),
align = "c",
digit = 2,
format.args = list(big.mark = ","),
col.names = c("VARIABLE", "MIN", "Q1", "MEDIAN", "MEAN", "Q3", "MAX"),
caption = "<b>DRUG-RELATED DATA IN PHILADELPHIA, PA: Summary Statistics</b>"
) %>%
# Shade every other row for ease of reading.
kable_styling(bootstrap_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "mistyrose", background = "red3")
# Kable of summary statistics.
kable(
as.data.frame(summary_stats),
align = "c",
digit = 2,
format.args = list(big.mark = ","),
col.names = c("VARIABLE", "MIN", "Q1", "MEDIAN", "MEAN", "Q3", "MAX"),
caption = "<b>DRUG-RELATED DATA IN PHILADELPHIA, PA: Summary Statistics</b>"
) %>%
# Shade every other row for ease of reading.
kable_styling(bootstrap_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "mistyrose", background = "black")
# Kable of summary statistics.
kable(
as.data.frame(summary_stats),
align = "c",
digit = 2,
format.args = list(big.mark = ","),
col.names = c("VARIABLE", "MIN", "Q1", "MEDIAN", "MEAN", "Q3", "MAX"),
caption = "<b>DRUG-RELATED DATA IN PHILADELPHIA, PA: Summary Statistics</b>"
) %>%
# Shade every other row for ease of reading.
kable_styling(bootstrap_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "white", background = "black")
# Plot map of percent underserved by Pennsylvania counties.
ggplot(pa_mapping) +
geom_sf(aes(fill = percent_underserved), color = "white", size = 0.5) +
scale_fill_viridis_c(
name = "Percent Underserved",
option = "magma",
# Format to show percent sign on color bar.
labels = function(x) paste0(x, "%")
) +
labs(
title = "Most Underserved Counties",
subtitle = "Pennsylvania, United States",
caption = "Source: ACS 2019–2023"
) +
theme_void()
# Create and format priority counties table.
kable_table <- pa_mapping[, c("county", "number_vulnerable",
"number_underserved", "percent_underserved",
"avg_nearby_hospital_dist", "total_vulnerable_pop")]
# Drop units to avoid object error when putting in kable.
kable_table <- kable_table %>%
mutate(
avg_nearby_hospital_dist = drop_units(avg_nearby_hospital_dist)
)
# Drop geometry and rename the columns.
kable_table <- kable_table %>%
st_drop_geometry() %>%
rename(
"County" = county,
"Number of Vulnerable Tracts" = number_vulnerable,
"Number of Underserved Tracts" = number_underserved,
"Percent Underserved" = percent_underserved,
"Average Mile(s) to Nearest Hospital" = avg_nearby_hospital_dist,
"Total Vulnerable People" = total_vulnerable_pop
)
# Filter and arrage the top 10 underserved counties by percent.
kable_table <- kable_table %>%
arrange(desc(`Percent Underserved`)) %>%
slice(1:10)
# Format percent column to have % sign.
kable_table <- kable_table %>%
mutate(
# Format so percent and distance values have units.
`Percent Underserved` = paste0(round(`Percent Underserved`, 2), "%"),
`Average Mile(s) to Nearest Hospital` = paste0(round(`Average Mile(s) to Nearest Hospital`, 2), " mi")
)
# Create kable.
kable(
kable_table,
# Center align.
align = "c",
# Limit percents to two decimal places.
digit = 2,
# Make sure numbers are separated by thousands places.
format.args = list(big.mark = ","),
caption = "<b>TOP 10 UNDERSERVED PA COUNTIES: For Priority Healthcare Investment</b>"
) %>%
# Shade every other row for ease of reading.
kable_styling(bootstrap_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "mistyrose", background = "red3")
# Create county-level access map.
# Align CRS.
pa_hospitals <- st_transform(pa_hospitals, crs = 4326)
pa_mapping <- st_transform(pa_mapping, crs = 4326)
# Choropleth map of PA counties.
choropleth_pa <- ggplot(pa_mapping) +
geom_sf(
# Color by underserved percentage.
aes(fill = percent_underserved),
color = "white",
linewidth = 0.25
) +
scale_fill_viridis_c(
# Color bar customization.
name = "Percent Underserved",
option = "viridis",
# Format to show percent sign in color bar.
labels = function(x) paste0(x, "%")
) +
geom_point(
data = pa_hospitals,
aes(x = LONGITUDE, y = LATITUDE, color = "Hospitals"),
alpha = 0.75, inherit.aes = FALSE
) +
scale_color_manual(
name = "Hospitals",
values = c("Hospitals" = "red")
) +
labs(
title = "UNDERSERVED COUNTIES & HOSPITAL LOCATIONS",
subtitle = "Pennsylvania, United States",
caption = "Source: 5-Year American Community Survey (ACS) 2019–2023",
) +
theme_void()
choropleth_pa + theme(
legend.box.margin = margin(l = 10, unit = "pt"),
legend.title = element_text(face = "bold"),
legend.text = element_text(family = "mono"),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(margin = margin(b = 10, t = 5, unit = "pt")),
plot.caption = element_text(margin = margin(t = 10, unit = "pt"), face = "italic", family = "mono")
)
#| warning: false
# Map tracts more than 0.5 mile walking distance from free food programs.
far_from_meals_tracts <- drug_tracts %>%
mutate(nearest_meal_mi = drop_units(nearest_meal_mi)) %>%
filter(nearest_meal_mi > 0.5)
# Transform geography data back to WGS84 for web mapping.
far_from_meals_tracts <- far_from_meals_tracts %>%
st_transform(crs = 4326)
# Choropleth map colored by drug offenses with treatment facility points.
far_from_meals_choropleth <- ggplot(far_from_meals_tracts) +
geom_sf(
aes(fill = `pct_drug_offense`),
) +
geom_sf(
data = philly_tracts, fill = NA,
color = "black", linewidth = 0.25,
alpha = 0.5
) +
geom_point(
data = free_meal_sites,
aes(x = x, y = y, color = "Free Meals"),
alpha = 0.75, inherit.aes = FALSE
) +
scale_fill_viridis_c(
name = "Percent Drug Incidence",
labels = function(x) paste0(x, "%")
) +
scale_color_manual(
name = "Free Meals",
values = c("Free Meals" = "red2")
) +
labs(
title = "HIGH DRUG EVENTS IN PHILADELPHIA, PA",
subtitle = "More than 0.5 mi from Free Meals",
caption = "Sources: 5-Year ACS 2023, OpenDataPhilly 2023–2025",
) +
theme_void()
far_from_meals_choropleth + theme(
panel.background = element_rect(fill = "azure2", size = 0.75),
legend.box.margin = margin(l = 10, unit = "pt"),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic"),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(margin = margin(b = 10, t = 5, unit = "pt")),
plot.caption = element_text(margin = margin(t = 10, unit = "pt"), face = "italic", family = "mono")
)
#| warning: false
# Map tracts more than 0.5 mile walking distance from free food programs.
far_from_meals_tracts <- drug_tracts %>%
mutate(nearest_meal_mi = drop_units(nearest_meal_mi)) %>%
filter(nearest_meal_mi > 0.5)
# Transform geography data back to WGS84 for web mapping.
far_from_meals_tracts <- far_from_meals_tracts %>%
st_transform(crs = 4326)
# Choropleth map colored by drug offenses with treatment facility points.
far_from_meals_choropleth <- ggplot(far_from_meals_tracts) +
geom_sf(
aes(fill = `pct_drug_offense`),
) +
geom_sf(
data = philly_tracts, fill = NA,
color = "black", linewidth = 0.25,
alpha = 0.5
) +
geom_point(
data = free_meal_sites,
aes(x = x, y = y, color = "Free Meals"),
alpha = 0.75, inherit.aes = FALSE
) +
scale_fill_viridis_c(
name = "Percent Drug Incidence",
labels = function(x) paste0(x, "%")
) +
scale_color_manual(
name = "Free Meals",
values = c("Free Meals" = "red2")
) +
labs(
title = "HIGH DRUG EVENTS IN PHILADELPHIA, PA",
subtitle = "More than 0.5 mi from Free Meals",
caption = "Sources: 5-Year ACS 2023, OpenDataPhilly 2023–2025",
) +
theme_void()
far_from_meals_choropleth + theme(
panel.background = element_rect(fill = "azure2", size = 0.75),
legend.box.margin = margin(l = 10, unit = "pt"),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic"),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(margin = margin(b = 10, t = 5, unit = "pt")),
plot.caption = element_text(margin = margin(t = 10, unit = "pt"), face = "italic", family = "mono")
)
#| warning: false
# Map tracts more than 0.5 mile walking distance from free food programs.
far_from_meals_tracts <- drug_tracts %>%
mutate(nearest_meal_mi = drop_units(nearest_meal_mi)) %>%
filter(nearest_meal_mi > 0.5)
# Transform geography data back to WGS84 for web mapping.
far_from_meals_tracts <- far_from_meals_tracts %>%
st_transform(crs = 4326)
# Choropleth map colored by drug offenses with treatment facility points.
far_from_meals_choropleth <- ggplot(far_from_meals_tracts) +
geom_sf(
aes(fill = `pct_drug_offense`),
) +
geom_sf(
data = philly_tracts, fill = NA,
color = "black", linewidth = 0.25,
alpha = 0.5
) +
geom_point(
data = free_meal_sites,
aes(x = x, y = y, color = "Free Meals"),
alpha = 0.75, inherit.aes = FALSE
) +
scale_fill_viridis_c(
name = "Percent Drug Events",
labels = function(x) paste0(x, "%")
) +
scale_color_manual(
name = "Free Meals",
values = c("Free Meals" = "red2")
) +
labs(
title = "HIGH DRUG EVENTS IN PHILADELPHIA, PA",
subtitle = "More than 0.5 mi from Free Meals",
caption = "Sources: 5-Year ACS 2023, OpenDataPhilly 2023–2025",
) +
theme_void()
far_from_meals_choropleth + theme(
panel.background = element_rect(fill = "azure2", size = 0.75),
legend.box.margin = margin(l = 10, unit = "pt"),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic"),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(margin = margin(b = 10, t = 5, unit = "pt")),
plot.caption = element_text(margin = margin(t = 10, unit = "pt"), face = "italic", family = "mono")
)
# Map tracts more than 0.5 mile walking distance from treatment facilities.
far_from_facilities_tracts <- drug_tracts %>%
mutate(nearest_facility_mi = drop_units(nearest_facility_mi)) %>%
filter(nearest_facility_mi > 0.5)
# Transform geography data back to WGS84 for web mapping.
far_from_facilities_tracts <- far_from_facilities_tracts %>%
st_transform(crs = 4326)
# Choropleth map colored by drug offenses with treatment facility points.
far_from_facilities_choropleth <- ggplot(far_from_facilities_tracts) +
geom_sf(
aes(fill = `pct_drug_offense`),
) +
geom_sf(
data = philly_tracts, fill = NA,
color = "black", linewidth = 0.25,
alpha = 0.5
) +
geom_point(
data = treatment_facilities,
aes(x = LONGITUDE, y = LATITUDE, color = "Treatment Facilities"),
alpha = 0.75, inherit.aes = FALSE
) +
scale_fill_viridis_c(
name = "Percent Drug Events",
labels = function(x) paste0(x, "%")
) +
scale_color_manual(
name = "Treatment Facilities",
values = c("Treatment Facilities" = "red2")
) +
labs(
title = "HIGH DRUG EVENTS IN PHILADELPHIA, PA",
subtitle = "More than 0.5 mi from Treatment Facilities",
caption = "Sources: 5-Year ACS 2023, OpenDataPhilly 2023–2025",
) +
theme_void()
far_from_facilities_choropleth + theme(
panel.background = element_rect(fill = "azure2", size = 0.75),
legend.box.margin = margin(l = 10, unit = "pt"),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic"),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(margin = margin(b = 10, t = 5, unit = "pt")),
plot.caption = element_text(margin = margin(t = 10, unit = "pt"), face = "italic", family = "mono")
)
# Map tracts more than 0.5 mile walking distance from sharps bins.
far_from_sharps_tracts <- drug_tracts %>%
mutate(nearest_sharps_mi = drop_units(nearest_sharps_mi)) %>%
filter(nearest_sharps_mi > 0.5)
# Align CRS.
far_from_sharps_tracts <- st_transform(far_from_sharps_tracts, 4326)
sharps_boxes <- st_transform(sharps_boxes, 4326)
# Extract coordinates from geometry to new columns for plotting.
sharps_boxes <- sharps_boxes %>%
mutate(
lon = st_coordinates(geometry)[, 1],
lat = st_coordinates(geometry)[, 2]
)
# Choropleth map colored by drug offenses with sharps bin points.
sharps_choropleth <- ggplot(far_from_sharps_tracts) +
geom_sf(
aes(fill = `pct_drug_offense`),
) +
geom_sf(
data = philly_tracts, fill = NA,
color = "black", linewidth = 0.25,
alpha = 0.5
) +
geom_point(
data = sharps_boxes,
aes(x = lon, y = lat, color = "Sharps Bins"),
alpha = 0.75, inherit.aes = FALSE
) +
scale_fill_viridis_c(
name = "Percent Drug Events",
labels = function(x) paste0(x, "%")
) +
scale_color_manual(
name = "Sharps Bins",
values = c("Sharps Bins" = "red2")
) +
labs(
title = "HIGH DRUG EVENTS IN PHILADELPHIA, PA",
subtitle = "More than 0.5 mi from Sharps Bins",
caption = "Sources: 5-Year ACS 2023, OpenDataPhilly 2023–2025",
) +
theme_void()
sharps_choropleth + theme(
panel.background = element_rect(fill = "azure2", size = 0.75),
legend.box.margin = margin(l = 10, unit = "pt"),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic"),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(margin = margin(b = 10, t = 5, unit = "pt")),
plot.caption = element_text(margin = margin(t = 10, unit = "pt"), face = "italic", family = "mono")
)
# Align CRS.
drug_tracts <- st_transform(drug_tracts, 4326)
# Choropleth map colored by drug offenses with sharps bin points and treatment facilities.
all_choropleth <- ggplot(drug_tracts) +
geom_sf(
aes(fill = `pct_drug_offense`),
) +
geom_sf(
data = philly_tracts, fill = NA,
color = "azure2", linewidth = 0.25,
alpha = 0.5
) +
geom_point(
data = treatment_facilities,
aes(x = LONGITUDE, y = LATITUDE, color = "Treatment Facilities"),
alpha = 0.8, inherit.aes = FALSE
) +
geom_point(
data = sharps_boxes,
aes(x = lon, y = lat, color = "Sharps Bins"),
alpha = 0.8, inherit.aes = FALSE
) +
scale_fill_viridis_c(
name = "Percent Drug Events",
labels = function(x) paste0(x, "%")
) +
scale_color_manual(
name = "Harm Reduction",
values = c("Treatment Facilities" = "orange","Sharps Bins" = "red2")
) +
labs(
title = "HIGH DRUG EVENTS IN PHILADELPHIA, PA",
subtitle = "With Sharps Bins and Treatment Facilities",
caption = "Sources: 5-Year ACS 2023, OpenDataPhilly 2023–2025",
) +
theme_void()
all_choropleth + theme(
panel.background = element_rect(fill = "azure4", size = 0.75),
legend.box.margin = margin(l = 10, unit = "pt"),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic"),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(margin = margin(b = 10, t = 5, unit = "pt")),
plot.caption = element_text(margin = margin(t = 10, unit = "pt"), face = "italic", family = "mono")
)
