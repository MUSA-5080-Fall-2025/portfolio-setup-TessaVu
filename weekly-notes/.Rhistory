)) %>%
mutate(utah_inc_ppl, low_flag = reliability_cat == "Low Confidence")
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
count_summary <- utah_inc_ppl %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
mutate(percent_counties = frequency / sum(frequency))
count_summary
# Create table of top 5 counties by MOE percentage
top_5 <- data.frame()
top_5 <- utah_inc_ppl %>%
arrange(desc(MOE_percent)) %>%
slice(0:5) %>%
select(2:8)
top_5
# Format as table with kable() - include appropriate column names and caption
kable(
top_5,
col.names = c("County", "Median Income", "Median Income MOE", "Total Population", "Total Population MOE", "Percent MOE", "MOE Confidence"),
digit = 2,
caption = "<b>TOP 5 UTAH COUNTIES: HIGHEST MEDIAN INCOME MARGIN-OF-ERROR</b>"
) %>%
kable_styling(latex_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "white", background = "black")
# Use filter() to select 2-3 counties from your county_reliability data
# Store the selected counties in a variable called selected_counties
selected_counties <- utah_inc_ppl %>%
filter(NAME == "Salt Lake" | NAME == "Morgan" | NAME == "Piute") %>%
arrange(MOE_percent)
# Display the selected counties with their key characteristics
# Show: county name, median income, MOE percentage, reliability category
kable(
selected_counties[c("GEOID", "NAME", "median_incE", "MOE_percent", "reliability_cat")],
col.names = c("GEOID", "County", "Median Income", "MOE Percentage", "MOE Confidence"),
digit = 2,
caption = "<b>SELECTED UTAH COUNTIES</b>"
) %>%
kable_styling(latex_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "white", background = "black")
# Define your race/ethnicity variables with descriptive names
# Use get_acs() to retrieve tract-level data
# Hint: You may need to specify county codes in the county parameter
tract_level <- get_acs(
geography = "tract",
state = my_state,
# Median household income and total population.
variables = c(white = "B03002_003", black = "B03002_004", hispanic = "B03002_012", total = "B03002_001"),
year = 2022,
survey = "acs5",
output = "wide"
) %>%
filter(str_detect(GEOID, "^49035") | str_detect(GEOID, "^49029") | str_detect(GEOID, "^49031"))
head(tract_level, 10)
# Calculate percentage of each group using mutate()
# Create percentages for white, Black, and Hispanic populations
tract_level <- tract_level %>%
mutate(
"White Percentage" = (whiteM / whiteE) * 100,
"Black Percentage" = (blackM / blackE) * 100,
"Hispanic Percentage" = (hispanicM / hispanicE) * 100
)
tract_level
# Add readable tract and county name columns using str_extract() or similar
tract_level <- tract_level %>%
separate(
col = NAME,
into = c("TRACT", "COUNTY", "STATE"),
sep = ";"
)
tract_level
# Find the tract with the highest percentage of Hispanic/Latino residents
# Hint: use arrange() and slice() to get the top tract
tract_level <- tract_level %>%
arrange(desc(`Hispanic Percentage`))
tract_level
# Calculate percentage of each group using mutate()
# Create percentages for white, Black, and Hispanic populations
tract_level <- tract_level %>%
mutate(
"White Percentage" = (whiteE / totalE) * 100,
"Black Percentage" = (blackE / totalE) * 100,
"Hispanic Percentage" = (hispanicE / totalE) * 100
)
tract_level
# Add readable tract and county name columns using str_extract() or similar
tract_level <- tract_level %>%
separate(
col = NAME,
into = c("TRACT", "COUNTY", "STATE"),
sep = ";"
)
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidycensus)
library(tidyverse)
library(knitr)
library(kableExtra)
# Set your Census API key
census_api_key("3aaee31789e10b674a531e9f236c35d5394b19ed")
# Choose your state for analysis - assign it to a variable called my_state
my_state = "Utah"
# Write your get_acs() code here
utah_inc_ppl <- get_acs(
geography = "county",
state = my_state,
# Median household income and total population.
variables = c(median_inc = "B19013_001", total_pop = "B01003_001"),
year = 2022,
survey = "acs5",
output = "wide"
)
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
utah_inc_ppl <- mutate(utah_inc_ppl, NAME = str_remove(NAME, " County, Utah"))
# Display the first few rows
glimpse(utah_inc_ppl)
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_ppl <- mutate(utah_inc_ppl, MOE_percent = (median_incM / median_incE) * 100) %>%
mutate(utah_inc_ppl, reliability_cat =
case_when(
MOE_percent < 5 ~ "High Confidence",
MOE_percent <= 10 ~ "Moderate Confidence",
MOE_percent > 10 ~ "Low Confidence"
)) %>%
mutate(utah_inc_ppl, low_flag = reliability_cat == "Low Confidence")
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
count_summary <- utah_inc_ppl %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
mutate(percent_counties = frequency / sum(frequency))
count_summary
# Create table of top 5 counties by MOE percentage
top_5 <- data.frame()
top_5 <- utah_inc_ppl %>%
arrange(desc(MOE_percent)) %>%
slice(0:5) %>%
select(2:8)
top_5
# Format as table with kable() - include appropriate column names and caption
kable(
top_5,
col.names = c("County", "Median Income", "Median Income MOE", "Total Population", "Total Population MOE", "Percent MOE", "MOE Confidence"),
digit = 2,
caption = "<b>TOP 5 UTAH COUNTIES: HIGHEST MEDIAN INCOME MARGIN-OF-ERROR</b>"
) %>%
kable_styling(latex_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "white", background = "black")
# Use filter() to select 2-3 counties from your county_reliability data
# Store the selected counties in a variable called selected_counties
selected_counties <- utah_inc_ppl %>%
filter(NAME == "Salt Lake" | NAME == "Morgan" | NAME == "Piute") %>%
arrange(MOE_percent)
# Display the selected counties with their key characteristics
# Show: county name, median income, MOE percentage, reliability category
kable(
selected_counties[c("GEOID", "NAME", "median_incE", "MOE_percent", "reliability_cat")],
col.names = c("GEOID", "County", "Median Income", "MOE Percentage", "MOE Confidence"),
digit = 2,
caption = "<b>SELECTED UTAH COUNTIES</b>"
) %>%
kable_styling(latex_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "white", background = "black")
# Define your race/ethnicity variables with descriptive names
# Use get_acs() to retrieve tract-level data
# Hint: You may need to specify county codes in the county parameter
tract_level <- get_acs(
geography = "tract",
state = my_state,
# Median household income and total population.
variables = c(white = "B03002_003", black = "B03002_004", hispanic = "B03002_012", total = "B03002_001"),
year = 2022,
survey = "acs5",
output = "wide"
) %>%
filter(str_detect(GEOID, "^49035") | str_detect(GEOID, "^49029") | str_detect(GEOID, "^49031"))
head(tract_level, 10)
# Calculate percentage of each group using mutate()
# Create percentages for white, Black, and Hispanic populations
tract_level <- tract_level %>%
mutate(
"White Percentage" = (whiteE / totalE) * 100,
"Black Percentage" = (blackE / totalE) * 100,
"Hispanic Percentage" = (hispanicE / totalE) * 100
)
tract_level
# Add readable tract and county name columns using str_extract() or similar
tract_level <- tract_level %>%
separate(
col = NAME,
into = c("TRACT", "COUNTY", "STATE"),
sep = ";"
)
tract_level
# Find the tract with the highest percentage of Hispanic/Latino residents
# Hint: use arrange() and slice() to get the top tract
tract_level <- tract_level %>%
arrange(desc(`Hispanic Percentage`))
tract_level
# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
tract_level_summary <- tract_level %>%
group_by(COUNTY) %>%
summarize(num_tracts = n(TRACTS),
avg_white = mean("Percent White"),
avg_black = mean("Percent Black"),
avg_hispanic = mean("Percent Hispanic")
)
# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
tract_level_summary <- tract_level %>%
group_by(COUNTY) %>%
summarize(num_tracts = n(TRACT),
avg_white = mean("Percent White"),
avg_black = mean("Percent Black"),
avg_hispanic = mean("Percent Hispanic")
)
# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
tract_level_summary <- tract_level %>%
group_by(COUNTY) %>%
summarize(num_tracts = n(),
avg_white = mean("Percent White"),
avg_black = mean("Percent Black"),
avg_hispanic = mean("Percent Hispanic")
)
tract_level_summary
# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
tract_level_summary <- tract_level %>%
group_by(COUNTY) %>%
summarize(num_tracts = n(),
avg_white = mean("White Percentage"),
avg_black = mean("Black Percentage"),
avg_hispanic = mean("Hispanic Percentage")
)
tract_level_summary
# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
tract_level_summary <- tract_level %>%
group_by(COUNTY) %>%
summarize("Number of Tracts" = n(),
"White Average Percent" = mean("White Percentage"),
"Black Average Percent" = mean("Black Percentage"),
"Hispanic Average Percent" = mean("Hispanic Percentage")
)
tract_level_summary
# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
tract_level_summary <- tract_level %>%
group_by(COUNTY) %>%
summarize("Number of Tracts" = n(),
"White Average Percent" = mean(`White Percentage`),
"Black Average Percent" = mean("Black Percentage"),
"Hispanic Average Percent" = mean("Hispanic Percentage")
)
tract_level_summary
# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
tract_level_summary <- tract_level %>%
group_by(COUNTY) %>%
summarize("Number of Tracts" = n(),
"White Average Percent" = mean(`White Percentage`),
"Black Average Percent" = mean(`Black Percentage`),
"Hispanic Average Percent" = mean(`Hispanic Percentage`)
)
tract_level_summary
# Find the tract with the highest percentage of Hispanic/Latino residents
# Hint: use arrange() and slice() to get the top tract
tract_level <- tract_level %>%
arrange(desc(`Hispanic Percentage`))
tract_level
tract_level
# Add readable tract and county name columns using str_extract() or similar
tract_level <- tract_level %>%
separate(
col = NAME,
into = c("TRACT", "COUNTY", "STATE"),
sep = ";"
) %>%
drop_na()
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(tidycensus)
library(tidyverse)
library(knitr)
library(kableExtra)
# Set your Census API key
census_api_key("3aaee31789e10b674a531e9f236c35d5394b19ed")
# Choose your state for analysis - assign it to a variable called my_state
my_state = "Utah"
# Write your get_acs() code here
utah_inc_ppl <- get_acs(
geography = "county",
state = my_state,
# Median household income and total population.
variables = c(median_inc = "B19013_001", total_pop = "B01003_001"),
year = 2022,
survey = "acs5",
output = "wide"
)
# Clean the county names to remove state name and "County"
# Hint: use mutate() with str_remove()
utah_inc_ppl <- mutate(utah_inc_ppl, NAME = str_remove(NAME, " County, Utah"))
# Display the first few rows
glimpse(utah_inc_ppl)
# Calculate MOE percentage and reliability categories using mutate()
utah_inc_ppl <- mutate(utah_inc_ppl, MOE_percent = (median_incM / median_incE) * 100) %>%
mutate(utah_inc_ppl, reliability_cat =
case_when(
MOE_percent < 5 ~ "High Confidence",
MOE_percent <= 10 ~ "Moderate Confidence",
MOE_percent > 10 ~ "Low Confidence"
)) %>%
mutate(utah_inc_ppl, low_flag = reliability_cat == "Low Confidence")
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
count_summary <- utah_inc_ppl %>%
group_by(reliability_cat) %>%
summarize(frequency = n()) %>%
mutate(frequency = frequency) %>%
mutate(percent_counties = frequency / sum(frequency))
count_summary
# Create table of top 5 counties by MOE percentage
top_5 <- data.frame()
top_5 <- utah_inc_ppl %>%
arrange(desc(MOE_percent)) %>%
slice(0:5) %>%
select(2:8)
top_5
# Format as table with kable() - include appropriate column names and caption
kable(
top_5,
col.names = c("County", "Median Income", "Median Income MOE", "Total Population", "Total Population MOE", "Percent MOE", "MOE Confidence"),
digit = 2,
caption = "<b>TOP 5 UTAH COUNTIES: HIGHEST MEDIAN INCOME MARGIN-OF-ERROR</b>"
) %>%
kable_styling(latex_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "white", background = "black")
# Use filter() to select 2-3 counties from your county_reliability data
# Store the selected counties in a variable called selected_counties
selected_counties <- utah_inc_ppl %>%
filter(NAME == "Salt Lake" | NAME == "Morgan" | NAME == "Piute") %>%
arrange(MOE_percent)
# Display the selected counties with their key characteristics
# Show: county name, median income, MOE percentage, reliability category
kable(
selected_counties[c("GEOID", "NAME", "median_incE", "MOE_percent", "reliability_cat")],
col.names = c("GEOID", "County", "Median Income", "MOE Percentage", "MOE Confidence"),
digit = 2,
caption = "<b>SELECTED UTAH COUNTIES</b>"
) %>%
kable_styling(latex_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "white", background = "black")
# Define your race/ethnicity variables with descriptive names
# Use get_acs() to retrieve tract-level data
# Hint: You may need to specify county codes in the county parameter
tract_level <- get_acs(
geography = "tract",
state = my_state,
# Median household income and total population.
variables = c(white = "B03002_003", black = "B03002_004", hispanic = "B03002_012", total = "B03002_001"),
year = 2022,
survey = "acs5",
output = "wide"
) %>%
filter(str_detect(GEOID, "^49035") | str_detect(GEOID, "^49029") | str_detect(GEOID, "^49031"))
head(tract_level, 10)
# Calculate percentage of each group using mutate()
# Create percentages for white, Black, and Hispanic populations
tract_level <- tract_level %>%
mutate(
"White Percentage" = (whiteE / totalE) * 100,
"Black Percentage" = (blackE / totalE) * 100,
"Hispanic Percentage" = (hispanicE / totalE) * 100
)
tract_level
# Add readable tract and county name columns using str_extract() or similar
tract_level <- tract_level %>%
separate(
col = NAME,
into = c("TRACT", "COUNTY", "STATE"),
sep = ";"
) %>%
drop_na()
tract_level
# Find the tract with the highest percentage of Hispanic/Latino residents
# Hint: use arrange() and slice() to get the top tract
tract_level <- tract_level %>%
arrange(desc(`Hispanic Percentage`))
tract_level
# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
tract_level_summary <- tract_level %>%
group_by(COUNTY) %>%
summarize("Number of Tracts" = n(),
"White Average Percent" = mean(`White Percentage`),
"Black Average Percent" = mean(`Black Percentage`),
"Hispanic Average Percent" = mean(`Hispanic Percentage`)
)
tract_level_summary
# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
tract_level_summary <- tract_level %>%
group_by(COUNTY) %>%
summarize("Number of Tracts" = n(),
"White Average Percent" = mean(`White Percentage`),
"Black Average Percent" = mean(`Black Percentage`),
"Hispanic Average Percent" = mean(`Hispanic Percentage`)
) %>%
drop_na()
tract_level_summary
# Create a nicely formatted table of your results using kable()
kable(
tract_level_summary,
#col.names = c("GEOID", "County", "Median Income", "MOE Percentage", "MOE Confidence"),
#digit = 2,
caption = "<b>SELECTED UTAH COUNTIES\nPopulation Percentage by Race</b>"
) %>%
kable_styling(latex_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "white", background = "black")
# Create a nicely formatted table of your results using kable()
kable(
tract_level_summary,
caption = "<b>SELECTED UTAH COUNTIES: Population Percentage by Race</b>"
) %>%
kable_styling(latex_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "white", background = "black")
# Create a nicely formatted table of your results using kable()
kable(
tract_level_summary,
caption = "<b>SELECTED UTAH COUNTIES: Average Racial Percents</b>"
) %>%
kable_styling(latex_options = "striped") %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, color = "white", background = "black")
# Calculate MOE percentages for white, Black, and Hispanic variables
# Hint: use the same formula as before (margin/estimate * 100)
MOE_percentages <- tract_level %>%
mutate(
"White MOE" = (whiteM / whiteE) * 100,
"Black MOE" = (blackM / blackE) * 100,
"Hispanic MOE" = (hispanicM / hispanicE) * 100
)
MOE_percentages
# Use logical operators (| for OR) in an ifelse() statement
MOE_percentages <- MOE_percentages %>%
mutate(MOE_percentages,
"MOE Flag" = if_else(
"White MOE" > 15 | "Black MOE" > 15 | "Hispanic MOE" > 15, TRUE, FALSE
)
)
MOE_percentages
# Use logical operators (| for OR) in an ifelse() statement
MOE_percentages <- MOE_percentages %>%
mutate(MOE_percentages,
"MOE Flag" = if_else(
"White MOE" > 15 | "Black MOE" > 15 | "Hispanic MOE" > 15, True, False
)
)
MOE_percentages
# Use logical operators (| for OR) in an ifelse() statement
MOE_percentages <- MOE_percentages %>%
mutate(MOE_percentages,
"MOE Flag" = if_else(
"White MOE" > 15 | "Black MOE" > 15 | "Hispanic MOE" > 15, TRUE, FALSE
)
)
MOE_percentages
# Calculate MOE percentages for white, Black, and Hispanic variables
# Hint: use the same formula as before (margin/estimate * 100)
MOE_percentages <- tract_level %>%
mutate(
"White MOE" = (whiteM / whiteE) * 100,
"Black MOE" = (blackM / blackE) * 100,
"Hispanic MOE" = (hispanicM / hispanicE) * 100
)
MOE_percentages
# Use logical operators (| for OR) in an ifelse() statement
MOE_percentages <- MOE_percentages %>%
mutate(MOE_percentages,
"MOE Flag" = if_else(
"White MOE" > 15 | "Black MOE" > 15 | "Hispanic MOE" > 15, TRUE, FALSE
)
)
MOE_percentages
# Calculate MOE percentages for white, Black, and Hispanic variables
# Hint: use the same formula as before (margin/estimate * 100)
MOE_percentages <- tract_level %>%
mutate(
"White MOE" = (whiteM / whiteE) * 100,
"Black MOE" = (blackM / blackE) * 100,
"Hispanic MOE" = (hispanicM / hispanicE) * 100
)
MOE_percentages
# Use logical operators (| for OR) in an ifelse() statement
MOE_percentages <- MOE_percentages %>%
mutate(MOE_percentages,
"MOE Flag" = if_else(
"White MOE" > 15 | "Black MOE" > 15 | "Hispanic MOE" > 15, TRUE, FALSE
)
)
MOE_percentages
